const allCommands = [
    {
        command: '',
        result: '',
        elements: '',
    },
    {
        command: 'clear',
        result: '',
        elements: '',
    },
    {
        command: 'help',
        result: ` <br> <p class="red">*** To Learn More, Type a command Below: <br> </p>
        <p class="green"> about skill contact welcome help </p> <br><br>`,
        elements: '',
    },
    {
        command: 'about',
        result: ` <br> <p class="red">I'm a Minhazul Asif, Web & eCommerce Developer,  Ethical Hacker, Cyber Security Expert, Entrepreneur, Instructor, Digital & Affiliate Marketer. </p><br> 
		
		<p>➤ Former Top Rated Freelancer, Upwork, <br>
		➤ Level 2 Seller, Fiverr, <br>
		➤ Completed 1000+ projects as freelancer. <br><br>
		
		➤ Founder & CEO, CodemanBD - Trained 5000+ Students <br>
		➤ Founder & Team Leader, WebBattalion.co - Biggest Web Agency <br>
		➤ Founder, ZoraIt - Hosting & IT Solution Provider <br>
		➤ Co-Founder, TotalshopBD - eCommerce Business <br>
		➤ Co-Founder, WeAffiliators - Amazon Affiliate Agency <br>
		➤ Co-Founder, Techreviewed.net - Tech affiliator <br>
		➤ Founder, DevelopersZone.net - Content Management Solutions  </p><br><br><br>
		
		<p class="red">*** To Learn More, Type a command Below: <br> </p>
        <p class="green"> about skill contact welcome help </p><br><br>`,
        elements: '',
    },
    {
        command: 'contact',
        result: ` <br> <p>You can connect me anytime :) <br><br>
        <u>Get Connected Through: </u> <br><br>
		➤ Phone: 880 1871 993300 <br>       
	    ➤ Email: <a href="mailto:contact@codemanbd.com">contact@codemanbd.com</a>,  <a href="mailto:mia.039@gmail.com">mia.039@gmail.com</a> <br>
        ➤ LinkedIn: <a href="http://linkedin.com/in/minhazulasif"> http://linkedin.com/in/minhazulasif </a> <br>
        ➤ Facebook: <a href="http://facebook.com/minhazulasif.codemanbd"> http://facebook.com/minhazulasif.codemanbd </a> <br>
		➤ Website: <a href="http://whatminhazulasifwrite.com/"> http://whatminhazulasifwrite.com/ </a> </p><br><br><br>
		
		<p class="red">*** To Learn More, Type a command Below: <br> </p>
        <p class="green"> about skill contact welcome help </p><br><br>`,
        elements: '',
    },
    {
        command: 'skill',
        result: ` <br> <p class="red">Still Learning... </p><br>
		<p> I Know bit about Web Development, Ethical Hacking, Cyber Security, WordPress, eCommerce, Shopify, Digital Marketing, Email Marketing, Lead Generation, Affiliate Marketing. <br><br>
		Still lot to learn... </p><br><br><br>
		
		<p class="red"> *** To Learn More, Type a command Below: <br> </p>
        <p class="green"> about skill contact welcome help </p><br><br>`,
        elements: '',
    },
    {
        command: 'welcome',
        result: '',
        elements: `                        <h1 style="color:lawngreen;">MINHAZUL ASIF'S TERMINAL</h1> <br>
                        <h3 class="src-code-font">It's Minhazul Asif</h3>
                        <p class="red intro src-code-font">
                            Web & eCommerce Developer, Entrepreneur, Instructor, Ethical Hacker, Cyber Security Expert, Digital & Affiliate Marketer.
                        </p> <br><br>
                        <p class="red text src-code-font">
                   
		*** To Learn More, Type a command Below: <br> 
        
                        <p class="green command-list src-code-font">
                           about skill contact welcome help <br><br>
                        </p>
                        </p>`,
    },
];

const welcomeScreen = document.querySelector('.welcome-screen');
const preLabelForEmptyCommand = document.querySelector('.label-for-empty-command');
const commandInput = document.querySelector('#command');
const commandResult = document.querySelector('.command-result');


// initial codes for first page load
for (let i = 0; i < allCommands.length; i++) {
    if (allCommands[i].command == 'welcome') {
        welcomeScreen.innerHTML = allCommands[i].elements;
        break;
    };
};

// command input keypress event
commandInput.addEventListener("keypress", (event) => {
    if (event.keyCode === 13) {
        commandExicution();
    }
});

// up and down key terminal history functionality

// commandInput.addEventListener("keydown", (event) => {
//    if (event.keyCode === 38) {
//        console.log('up keypressed');
//     }
//     console.log(event.keyCode)
// });


// defining commandExicution function
let isCommandAvailable = false;
let i = 0;
commandExicution = () => {
    // storing the input command value for 'command' veriable
    let command = String(commandInput.value).toLowerCase().trim();
        for (i = 0; i < allCommands.length; i++) {
            // command == commandList.[j] ? runCommand() : emptyCommand();
            if (command == allCommands[i].command) {
                isCommandAvailable = true;
                break;
            } else { isCommandAvailable = false; };
        };
        commandResultExecution(i, command);
        if (command == 'clear' || command == 'welcome') {
            commandResult.innerHTML = '';
            preLabelForEmptyCommand.innerHTML = '';
        };
    };
    
// creating elements
commandResultExecution = (i, command) => {
    welcomeScreen.innerHTML = isCommandAvailable ? allCommands[i].elements : '';
    // defining new label for new command
    let preLabelWithCommand = document.createElement('label');
    preLabelWithCommand.classList.add('command-input-label');
    preLabelWithCommand.innerHTML = `root@minhazulasif:~$$$ `  + `<span class="green-color"> ${command}</span>`;
    // defining paragraph tag for command result
    let pTagForResult = document.createElement('p');
    pTagForResult.innerHTML = isCommandAvailable ? allCommands[i].result : `<span class="red-color">'${command}' is not a valid command</span> <br> type 'help' to get all the valid commands <br><br>`;
            // appending label and result P tag to the commandResult div for each iteration
            commandResult.appendChild(preLabelWithCommand);
            commandResult.appendChild(pTagForResult);
            // clearing the commnand input field
            commandInput.value = '';
};

// this snippet is for getiing focused the command input field, clicking the body area
document.body.addEventListener('click', () => {
    commandInput.focus();
});